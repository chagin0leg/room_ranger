name: Update ICS files

on:
  schedule:
    - cron: '0 * * * *' # каждый час
  workflow_dispatch:

jobs:
  update-ics:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch (для скрипта)
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Проверка наличия download_ics.sh на main
        run: ls -l download_ics.sh

      - name: Copy download_ics.sh to temp
        run: cp download_ics.sh /tmp/download_ics.sh && ls -l /tmp/download_ics.sh

      - name: Checkout gh-pages branch (для работы с ICS)
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: Проверка наличия download_ics.sh в /tmp после checkout gh-pages
        run: ls -l /tmp/download_ics.sh

      - name: Move script from temp to workspace
        run: mv /tmp/download_ics.sh ./download_ics.sh && ls -l download_ics.sh

      - name: Проверка наличия download_ics.sh перед запуском
        run: ls -l download_ics.sh

      - name: Restore AdGuard VPN session cache
        uses: actions/cache@v4
        with:
          path: ~/.config/AdGuardVPN
          key: ${{ runner.os }}-adguardvpn-session

      - name: Install, Login and Connect to VPN (background)
        run: |
          curl -fsSL https://raw.githubusercontent.com/AdguardTeam/AdGuardVPNCLI/master/scripts/release/install.sh | sh -s -- -v -a y
          adguardvpn-cli login --username ${{ secrets.ADGUARD_VPN_USERNAME }} --password ${{ secrets.ADGUARD_VPN_PASSWORD }}
          adguardvpn-cli connect -y -6 > /dev/null 2>&1 &
          echo $! > vpn.pid

      - name: Download ICS files
        run: bash download_ics.sh

      - name: Disconnect VPN
        run: |
          kill $(cat vpn.pid) || true
          adguardvpn-cli disconnect || true

      - name: Save AdGuard VPN session cache
        uses: actions/cache@v4
        with:
          path: ~/.config/AdGuardVPN
          key: ${{ runner.os }}-adguardvpn-session

      - name: Check for changes
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          if ! git diff --quiet; then
            git add ics/*.ics
            git commit --amend --no-edit || git commit -m "Update ICS files"
            git push origin gh-pages --force
          else
            echo "No changes in ICS files"
          fi